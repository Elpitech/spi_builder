Стандартный debian-10.1.0-arm64-netinst.iso основан на ядре, которое на Baikal-M
не грузится.  Это связано с недоработанным UEFI в старых прошивках. Сейчас на
новые устройства прошивается уже починенная прошивка, но для старых устройств
нужно в инсталляторе подменять ядро на наше.  В любом случае лучше устанавливать
ядро, которое поддерживает все устройства, имеющиеся на Baikal-M таргетах.

Наше ядро тут:
https://github.com/edelweiss-tech/kernel

Собрать его можно байкальским SDK 4.4, который есть на сайте Байкал Электроникс.
Пример скрипта для сборки ядра можно посмотреть в файлах Makefile и readme.md.

Для изготовления образа загрузчика предлагается следующая последовательность,
основанная на документации https://wiki.debian.org/DebianInstaller/Modify/CD

1. Make working copy of CD:

Скачиваем свежий инсталлятор debian-XXX-arm64-netinst.iso, монтируем через "-oloop"
(либо иным образом извлекаем содержимое) в <src-iso>. Копируем в отдельный каталог:
$ cp -pR <src-iso>/. bm-iso
$ chmod -R +w bm-iso

2. Update initrd:
Избавляемся от модулей, которые не подходят к нашему ядру:
$ mkdir bm-initrd
$ cd bm-initrd
$ gunzip -c ../bm-iso/install.a64/initrd.gz |fakeroot cpio -id
$ rm -rf lib/modules/*
$ find . |fakeroot cpio -o -Hnewc |gzip -9 > ../bm-iso/install.a64/initrd.gz
$ cd ..
$ rm -rf bm-initrd
$ cd bm-iso

3. Update boot kernel:
$ cp <mitx.Image> install.a64/vmlinuz

4. Update boot args: edit boot/grub/grub.cfg and add
"console=tty1 console=ttyS0,115200n8 earlyprintk=uart8250-32bit,0x20230000 verbose ignore_loglevel fbcon=map
:0 libata.force=3.0G"
(Этот шаг не является обязательным.)

5. Remove debian kernel packages:
$ rm -rf pool/main/l/linux-latest pool/main/l/linux-signed-arm64

6. Add BM kernel package:
(пакет debian kernel создается командой "make deb-pkg")
$ mkdir pool/main/l/linux-image
$ cp <linux-image-4.9.216-bm_4.9.216-bm-20_arm64.deb> pool/main/l/linux-image
$ cp <linux-headers-4.9.216-bm_4.9.216-bm-20_arm64.deb> pool/main/l/linux-image  #???

7. Create config-deb file:
$ cd ..
$cat > config-deb <<EOF
# A config-deb file.

# Points to where the unpacked DVD-1 is.
Dir {
    ArchiveDir "bm-iso";
};

# Sets the top of the .deb directory tree.
TreeDefault {
   Directory "pool/";
};

# The location for a Packages file.                
BinDirectory "pool/main" {
   Packages "dists/buster/main/binary-arm64/Packages";
};

# We are only interested in .deb files (.udeb for udeb files).                                
Default {
   Packages {
       Extensions ".deb";
    };
};
EOF

8. Generate Packages.gz:
$ apt-ftparchive generate config-deb

9. Update Release:
$ sed -i '/MD5Sum:/,$d' bm-iso/dists/buster/Release
$ apt-ftparchive release bm-iso/dists/buster >> bm-iso/dists/buster/Release

10. Update md5sum.txt:
$ cd bm-iso
$ md5sum `find ! -name "md5sum.txt" -follow -type f` > md5sum.txt
(ignore "FS loop" message)
$ cd ..

11. Create image:
$ xorriso -as mkisofs -r -checksum_algorithm_iso md5,sha1 -V 'Debian 10.1.0 arm64 n' \
-o bm-inst.iso -J -joliet-long -cache-inodes -no-emul-boot -boot-load-size 4 -boot-info-table \
-eltorito-alt-boot --efi-boot boot/grub/efi.img -append_partition 2 0x01 bm-iso/boot/grub/efi.img \
-partition_offset 16 bm-iso

