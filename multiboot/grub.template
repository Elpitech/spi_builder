#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub2-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
set pager=1

if [ -f ${config_directory}/grubenv ]; then
  load_env -f ${config_directory}/grubenv
elif [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="${saved_entry}"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

terminal_output console
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=menu
  set timeout=5
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout=5
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/00_tuned ###
set tuned_params=""
### END /etc/grub.d/00_tuned ###

### BEGIN /etc/grub.d/01_users ###
if [ -f ${prefix}/user.cfg ]; then
  source ${prefix}/user.cfg
  if [ -n "${GRUB2_PASSWORD}" ]; then
    set superusers="root"
    export superusers
    password_pbkdf2 root ${GRUB2_PASSWORD}
  fi
fi
### END /etc/grub.d/01_users ###

### BEGIN /etc/grub.d/08_fallback_counting ###
insmod increment
# Check if boot_counter exists and boot_success=0 to activate this behaviour.
if [ -n "${boot_counter}" -a "${boot_success}" = "0" ]; then
  # if countdown has ended, choose to boot rollback deployment,
  # i.e. default=1 on OSTree-based systems.
  if  [ "${boot_counter}" = "0" -o "${boot_counter}" = "-1" ]; then
    set default=1
    set boot_counter=-1
  # otherwise decrement boot_counter
  else
    decrement boot_counter
  fi
  save_env boot_counter
fi
### END /etc/grub.d/08_fallback_counting ###

### BEGIN /etc/grub.d/10_linux ###
menuentry 'RED OS release MUROM (7.2)' --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-simple-REDOS_STUB' {
	savedefault
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt2'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  REDOS_STUB
	else
	  search --no-floppy --fs-uuid --set=root REDOS_STUB
	fi
	echo	'Загружается Linux vmlinuz  …'
	linux /boot/vmlinuz root=UUID=REDOS_STUB  rw rootwait rhgb console=ttyS0,115200n8 earlyprintk=uart8250-32bit,0x20230000 earlycon=efifb,ram video=HDMI-A-1:D fbcon=map:10 baikal-hdmi.max_clock = 148500

	echo	'Загружается начальный виртуальный диск …'
	initrd /boot/initrd.img
	devicetree /boot/bm-mitx.dtb
}

menuentry 'Debian Edelweiss' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-EDELW_STUB' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt3'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  EDELW_STUB
	else
	  search --no-floppy --fs-uuid --set=root EDELW_STUB
	fi
	echo	'Loading Linux vmlinuz ...'
	linux	/boot/vmlinuz root=UUID=EDELW_STUB ro  console=ttyS0,115200 console=tty1 fbcon=map:0 plymouth.enable=0
	echo	'Loading initial ramdisk ...'
	initrd	/boot/initrd.img
	devicetree /boot/bm-mitx.dtb
}
menuentry 'ALT Workstation 9.1' --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-simple-ALT_STUB' {
	savedefault
	load_video
	insmod gzio
	insmod part_msdos
	insmod ext2
	set root='hd0,gpt5'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt5 --hint-efi=hd0,gpt5 --hint-baremetal=ahci0,gpt5  ALT_STUB
	else
	  search --no-floppy --fs-uuid --set=root ALT_STUB
	fi
	echo	'Загружается Linux vmlinuz-4.9.229-bmitx-def-alt1 …'
	linux /boot/vmlinuz-4.9.229-bmitx-def-alt1 root=UUID=ALT_STUB ro resume=/dev/disk/by-uuid/ab38ef79-9e30-4078-96f8-373bd16fcabf panic=30 splash console=ttyS0,115200 console=tty1 fbcon=map:0
	echo	'Загружается начальный виртуальный диск …'
	initrd /boot/initrd.img
	devicetree /boot/bm-mitx.dtb
}

menuentry 'Astra Linux (Novorossiysk 4.2.1)' --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-simple-ASTRA_STUB' {
	savedefault
	load_video
	insmod gzio
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt6'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt6 --hint-efi=hd0,gpt6 --hint-baremetal=ahci0,gpt6  ASTRA_STUB
	else
	  search --no-floppy --fs-uuid --set=root ASTRA_STUB
	fi
	echo	'Загружается Linux vmlinuz …'
	linux /boot/vmlinuz root=UUID=ASTRA_STUB  rw rootwait console=tty1 console=ttyS0,115200n8 earlyprintk=uart8250-32bit,0x20230000 earlycon=efifb,ram video=HDMI-A-1:D fbcon=map:10 baikal-hdmi.max_clock = 148500 verbose ignore_loglevel systemd.legacy_systemd_cgroup_controller=yes efi=noruntime
	echo	'Загружается начальный виртуальный диск …'
	initrd /boot/initrd.img
	devicetree /boot/bm-mitx.dtb
}

menuentry 'Debian Wayland' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-WAYLAND_STUB' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt7'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt7 --hint-efi=hd0,gpt7 --hint-baremetal=ahci0,gpt7  WAYLAND_STUB
	else
	  search --no-floppy --fs-uuid --set=root WAYLAND_STUB
	fi
	echo	'Loading Linux 4.9.229-baikal_m1000 ...'
	linux	/boot/vmlinuz-4.9.229-baikal_m1000 root=UUID=WAYLAND_STUB ro  verbose
	echo	'Loading initial ramdisk ...'
	initrd	/boot/initrd.img-4.9.229-baikal_m1000
	devicetree /boot/bm-mitx.dtb
}
menuentry 'Ubuntu 20.04.1' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-UBUNTU_STUB' {
	#recordfail
	load_video
	#gfxmode $linux_gfx_mode
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt8'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt8 --hint-efi=hd0,gpt8 --hint-baremetal=ahci0,gpt8  UBUNTU_STUB
	else
	  search --no-floppy --fs-uuid --set=root UBUNTU_STUB
	fi
	linux	/boot/vmlinuz root=UUID=UBUNTU_STUB ro  console=tty1
	initrd	/boot/initrd.img
	devicetree /boot/bm-mitx.dtb
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/10_reset_boot_success ###
# Hiding the menu is ok if last boot was ok or if this is a first boot attempt to boot the entry
if [ "${boot_success}" = "1" -o "${boot_indeterminate}" = "1" ]; then
  set menu_hide_ok=1
else
  set menu_hide_ok=0 
fi
# Reset boot_indeterminate after a successful boot
if [ "${boot_success}" = "1" ] ; then
  set boot_indeterminate=0
# Avoid boot_indeterminate causing the menu to be hidden more then once
elif [ "${boot_indeterminate}" = "1" ]; then
  set boot_indeterminate=2
fi
# Reset boot_success for current boot 
set boot_success=0
save_env boot_success boot_indeterminate
### END /etc/grub.d/10_reset_boot_success ###

### BEGIN /etc/grub.d/12_menu_auto_hide ###
if [ x$feature_timeout_style = xy ] ; then
  if [ "${menu_show_once}" ]; then
    unset menu_show_once
    save_env menu_show_once
    set timeout_style=menu
    set timeout=60
  elif [ "${menu_auto_hide}" -a "${menu_hide_ok}" = "1" ]; then
    set orig_timeout_style=${timeout_style}
    set orig_timeout=${timeout}
    if [ "${fastboot}" = "1" ]; then
      # timeout_style=menu + timeout=0 avoids the countdown code keypress check
      set timeout_style=menu
      set timeout=0
    else
      set timeout_style=hidden
      set timeout=1
    fi
  fi
fi
### END /etc/grub.d/12_menu_auto_hide ###

### BEGIN /etc/grub.d/20_linux_xen ###
### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/20_ppc_terminfo ###
### END /etc/grub.d/20_ppc_terminfo ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
menuentry 'System setup' $menuentry_id_option 'uefi-firmware' {
	fwsetup
}
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
